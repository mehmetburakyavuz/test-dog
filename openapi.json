{
  "mockScenarios": {
    "success": {
      "listApiKeys": {
        "response": [
          {
            "id": "key_1234567890",
            "name": "Production API Key",
            "prefix": "sk_live_",
            "createdAt": "2025-01-01T00:00:00Z",
            "lastUsedAt": "2025-01-10T12:00:00Z",
            "expiresAt": null
          },
          {
            "id": "key_0987654321",
            "name": "Development API Key",
            "prefix": "sk_test_",
            "createdAt": "2025-01-05T10:00:00Z",
            "lastUsedAt": "2025-01-10T14:30:00Z",
            "expiresAt": "2025-02-05T10:00:00Z"
          }
        ]
      },
      "createApiKey": {
        "response": {
          "id": "key_{{randomId}}",
          "name": "{{request.body.name}}",
          "prefix": "sk_live_",
          "key": "sk_live_{{randomString(32)}}",
          "createdAt": "{{currentDateTime}}",
          "lastUsedAt": null,
          "expiresAt": "{{futureDateTime(request.body.expiresIn)}}"
        }
      }
    },
    "errors": {
      "unauthorized": {
        "statusCode": 401,
        "response": {
          "error": {
            "code": "UNAUTHORIZED",
            "message": "Invalid or missing API key",
            "timestamp": "{{currentDateTime}}"
          }
        }
      },
      "badRequest": {
        "statusCode": 400,
        "response": {
          "error": {
            "code": "BAD_REQUEST",
            "message": "Invalid request parameters",
            "details": [
              {
                "field": "name",
                "message": "Name must be between 3 and 50 characters"
              }
            ],
            "timestamp": "{{currentDateTime}}"
          }
        }
      },
      "notFound": {
        "statusCode": 404,
        "response": {
          "error": {
            "code": "NOT_FOUND",
            "message": "API key not found",
            "timestamp": "{{currentDateTime}}"
          }
        }
      }
    }
  },
  "dynamicRules": {
    "randomId": "function() { return Math.random().toString(36).substring(2, 15); }",
    "randomString": "function(length) { const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'; let result = ''; for (let i = 0; i < length; i++) { result += chars.charAt(Math.floor(Math.random() * chars.length)); } return result; }",
    "currentDateTime": "function() { return new Date().toISOString(); }",
    "futureDateTime": "function(seconds) { return new Date(Date.now() + seconds * 1000).toISOString(); }"
  }
}